name: pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main
    paths:
      - "cdviz-site/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: jdx/mise-action@v2
        with:
          working_directory: ./cdviz-site/landingpage
      - run: |
          mise run install
          mise run build
        working-directory: ./cdviz-site/landingpage

      - uses: jdx/mise-action@v2
        with:
          working_directory: ./cdviz-site/docs
      - run: |
          mise run install
          mise run build
        working-directory: ./cdviz-site/docs

      - run: |
          mkdir -p ./cdviz-site/dist/docs
          cp -r ./cdviz-site/landingpage/dist/* ./cdviz-site/dist
          cp -r ./cdviz-site/docs/.vitepress/dist/* ./cdviz-site/dist/docs

      # - uses: actions/configure-pages@v4
      # - uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: ./cdviz-site/landingpage/dist
      - name: Deploy
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          # packageManager: bun
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: ./cdviz-site
          command: pages deploy ./dist --project-name=cdviz
          # Optional: Enable this if you want to have GitHub Deployments triggered
          # gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: print deployment-url
        env:
          DEPLOYMENT_URL: ${{ steps.deploy.outputs.deployment-url }}
        run: |
          echo "url: $DEPLOYMENT_URL" >> "$GITHUB_STEP_SUMMARY"
      - name: print pages-deployment-alias-url
        env:
          DEPLOYMENT_ALIAS_URL: ${{ steps.deploy.outputs.pages-deployment-alias-url }}
        run: |
          echo "alias-url: $DEPLOYMENT_ALIAS_URL" >> "$GITHUB_STEP_SUMMARY"

  # # Deployment job
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4
