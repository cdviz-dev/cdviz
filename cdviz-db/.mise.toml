[env]
PG_LOCAL_PWD = "postgres-password"
PG_LOCAL_USER = "cdviz"
PG_LOCAL_URL = "postgres://{{env.PG_LOCAL_USER}}:{{env.PG_LOCAL_PWD}}@127.0.0.1:5432/{{env.PG_LOCAL_USER}}?search_path=public&sslmode=disable"

[tools]
# docker = "latest"
atlas = "0.29"

[tasks."plan"]
description = "update the migrations to reflect target `src/schema.sql`"
run = [
  "mise run db-local:start-empty",
  "atlas migrate diff --env db-local",
  "atlas migrate lint --env db-local --latest 10",
  "atlas migrate validate --env db-local",
  "atlas migrate hash",
  "mise run db-local:stop",
]

[tasks."apply"]
description = "apply the schema & data migrations"
run = [
  "atlas migrate apply --env db-local",
]

# cmd: atlas schema apply --env local

[tasks."db-local:start-empty"]
depends = ["build:cdviz-db-pg"]
description = "start a container for the local db (empty: no data, no schema)"
run = [
  "mise run db-local:stop",
  """docker run --name cdviz-db \
    -e \"POSTGRES_PASSWORD=$PG_LOCAL_PWD\" \
    -e \"POSTGRES_USER=$PG_LOCAL_USER\" \
    -p 5432:5432 \
    -d \
    ghcr.io/cdviz-dev/cdviz-db-pg:latest \
    postgres \
    -c "shared_preload_libraries=timescaledb"
  """,
  "sleep 3 # wait for the container to be ready",
]

[tasks."db-local:start"]
description = "start a container for the local db with the migrations applied"
run = [
  "mise run db-local:start-empty",
  "mise run apply",
]

[tasks."db-local:stop"]
description = "stop the container of the local db"
run = ["docker rm -f cdviz-db || true"]

[tasks."db-local:psql"]
description = "connect to the local db with psql"
run = [
  "echo password=$PG_LOCAL_PWD",
  "docker run -it --rm --network host postgres psql -h 127.0.0.1 --username {{env.PG_LOCAL_USER}} -d {{env.PG_LOCAL_USER}}",
]

[tasks."test"]
run = ["mise run db-local:start", "mise run db-local:stop"]

[tasks."ci"]
description = "set of tasks run by CI"
run = [
  "mise run test",
  # "mise run check"
  # "mise run lint"
]

[tasks."list:containers"]
description = "list all containers images"
run = ["""docker image ls --tree --filter "reference=*/*/cdviz-db*""""]

[tasks."debug:bake"]
description = "show the 'resovled' bake definition"
run = ["docker buildx bake --print"]

[tasks."build:cdviz-db-pg"]
description = "build the docker image for the postgresql + extension (tag is based on posgresql version)"
run = ["docker buildx bake --progress=plain cdviz-db-pg"]

[tasks."publish:cdviz-db-pg"]
description = "build the docker image for the postgresql + extension and push it to ghcr.io (tag is based on posgresql version)"
run = ["docker buildx bake --push cdviz-db-pg"]

[tasks."build:cdviz-db-migration"]
description = "build the docker image for the migration"
run = ["docker buildx bake --progress=plain cdviz-db-migration"]

[tasks."publish:cdviz-db-migration"]
description = "build the docker image for the migration and push it to ghcr.io (tag is the latest migrations name)"
run = """
MIGRATION_VERSION=$(ls -1 migrations/*.sql | tail -1)
MIGRATION_VERSION=${MIGRATION_VERSION#migrations/}
MIGRATION_VERSION=${MIGRATION_VERSION%.sql}
export MIGRATION_VERSION="0.$MIGRATION_VERSION.0"
docker buildx bake --push cdviz-db-migration
"""

[tasks."publish"]
description = "publish all containers images"
depends = ["publish:*"]
