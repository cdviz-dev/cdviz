[env]
CLUSTER_NAME = "kind-local"

[tools]
# docker = "latest"      # to build, to run containers, should be available for some of thoses tools
"ubi:cdviz-dev/cdviz-collector" = "latest"
kubectl = "1.33.0"                                                    # to interact with k8s cluster
ctlptl = "0.8"                                                        # to setup / manage local k8s (kind) cluster
kind = "0.27.0"                                                       # to have a local k8s cluster (on top of docker)
"ubi:helmwave/helmwave" = { version = "0.41", matching = "helmwave" }

[tasks."clean"]
description = "Clean / Delete every stacks"
depends = ["stack:*:delete"]

[tasks."stack:compose:up"]
description = "Launch the docker compose demo (in foreground)"
dir = "stack-compose"
run = """
  # export MY_UID=$(id -u)
  # export MY_GID=$(id -g)
  docker compose -f docker-compose.yaml pull
  docker compose -f docker-compose.yaml up
  """

[tasks."stack:compose:down"]
description = "Stop the docker compose demo"
dir = "stack-compose"
run = """
  # export MY_UID=$(id -u)
  # export MY_GID=$(id -g)
  docker compose -f docker-compose.yaml stop
  """

[tasks."stack:compose:delete"]
description = "Stop & remove the docker compose demo (and local data)"
dir = "stack-compose"
run = [
  "mise run stack:compose:down",
  "docker compose -f docker-compose.yaml rm",
  "rm -rf tmp",
]

[tasks."stack:grafana:view"]
description = "Open the Grafana dashboard (compose demo, k8s demo (after port-forward))"
run = ["open http://127.0.0.1:3000"]

[tasks."stack:db-admin:view"]
description = "Open the db-admin UI, adminer (compose demo)"
run = ["open http://127.0.0.1:5499"]

[tasks."use_cases:run"]
description = "Launch cdviz-collector cli with content (data & configuration) of the use_cases folder"
dir = "use_cases"
env = { OTEL_TRACES_SAMPLER = "always_off", OTEL_EXPORTER_OTLP_TRACES_ENDPOINT = "http://127.0.0.1:4317", CDVIZ_COLLECTOR__SINKS__DEBUG__ENABLED = "false" }
run = [
  "cdviz-collector connect -vv --config ./cdviz-collector.toml",
  # - export UID=$(id -u)
  # - export GID=$(id -g)
  # - echo ">> $UID -- $GID"
  # - mkdir -p tmp/grafana/data || true
  # RUST_LOG: "cdviz_collector::sinks=debug,info" # cdviz_collector::sources=debug
]

[tasks."stack:k8s:create"]
description = "Create a k8s cluster (kind)"
dir = "stack-k8s"
run = [
  "ctlptl create registry ctlptl-registry --port=5005",
  "ctlptl create cluster kind --name \"$CLUSTER_NAME\" --registry=ctlptl-registry",
  "kubectl cluster-info --context \"$CLUSTER_NAME\"",
]
[tasks."stack:k8s:use-context"]
description = "Use the k8s cluster (kind) context"
dir = "stack-k8s"
run = ["kubectl config use-context kind-local"]
wait_for = ["stack:k8s:create"]

[tasks."stack:k8s:deploy:pre-req"]
description = "Deploy the pre-requirement for cdviz (postgresql, grafana, ...) on a k8s cluster"
depends = ["stack:k8s:use-context"]
dir = "stack-k8s"
run = [
  "helmwave up --build --progress --skip-unchanged -t pre-req",
  # to avoid a certificate x509 error, we need to restart the deployment (or kill the pod)
  # cause by wrong order of creation webhooks,..
  # see https://github.com/cloudnative-pg/cloudnative-pg/issues/3088
  "kubectl rollout restart deployments/cnpg-cloudnative-pg -n cnpg",
  "# look at the logs to have some instructions to connect to the services, retrieve the passwords,...",
]

[tasks."stack:k8s:delete:pre-req"]
description = "Delete the pre-requirement for cdviz (postgresql, grafana, ...) on a k8s cluster"
depends = ["stack:k8s:delete:cdviz"]
dir = "stack-k8s"
run = ["helmwave down --build  -t pre-req"]

[tasks."stack:k8s:deploy:cdviz"]
description = "Deploy cdviz stack (cdviz-collector, cdviz-db) on a k8s cluster"
depends = ["stack:k8s:use-context"]
wait_for = ["stack:k8s:deploy:pre-req"]
dir = "stack-k8s"
run = [
  "kubectl create namespace cdviz-dev || true",
  "helmwave up --build --progress --skip-unchanged -t cdviz",
]

[tasks."stack:k8s:delete:cdviz"]
description = "Delete cdviz stack (cdviz-collector, cdviz-db) on a k8s cluster"
depends = ["stack:k8s:use-context"]
dir = "stack-k8s"
run = [
  "helmwave down --build  -t cdviz",
  "kubectl delete namespace cdviz-dev || true",
]

# [tasks."stack:k8s:deploy:integration"]
# description = "Deploy the integrations app (kubewatch,...) on a k8s cluster"
# depends = ["stack:k8s:use-context"]
# wait_for = ["stack:k8s:deploy:pre-req"]
# dir = "stack-k8s"
# run = ["helmwave up --build --progress --skip-unchanged -t integration"]

# [tasks."stack:k8s:delete:integration"]
# description = "Delete the integrations app (kubewatch,...) on a k8s cluster"
# depends = ["stack:k8s:use-context"]
# dir = "stack-k8s"
# run = ["helmwave down --build  -t integration"]

[tasks."stack:k8s:port-forward:grafana"]
description = "Port-forward the Grafana dashboard to localhost:3000"
depends = ["stack:k8s:use-context"]
run = ["kubectl port-forward svc/grafana -n grafana 3000:80"]

[tasks."stask:k8s:show:grafana:admin-password"]
description = "Show the Grafana admin password"
depends = ["stack:k8s:use-context"]
run = [
  'kubectl get secret --namespace grafana grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo',
]

[tasks."stack:k8s:port-forward:cdviz-db"]
description = "Port-forward the PostgreSQL database to localhost:5432"
depends = ["stack:k8s:use-context"]
run = ["kubectl port-forward svc/cdviz-db-rw -n cdviz-dev 5432:5432"]

[tasks."stack:k8s:port-forward:cdviz-collector"]
description = "Port-forward the cdviz-collector to localhost:8080"
depends = ["stack:k8s:use-context"]
run = ["kubectl port-forward svc/cdviz-collector -n cdviz-dev 8080:8080"]

[tasks."stack:k8s:deploy"]
description = "Deploy all the resources (pre-req, cdviz, integrations,...) on a k8s cluster"
depends = ["stack:k8s:use-context", "stack:k8s:deploy:*"]

[tasks."stack:k8s:delete"]
description = "Delete a k8s cluster (kind) and its resources"
depends = ["stack:k8s:delete:*"]
dir = "stack-k8s"
run = [
  "ctlptl delete cluster \"$CLUSTER_NAME\"",
  "ctlptl delete registry ctlptl-registry",
]

[tasks."stack:k8s:check"]
description = "check the helwave config to deploy the stack"
depends = ["stack:k8s:use-context"]
dir = "stack-k8s"
run = ["helmwave build"]

[tasks."ci"]
description = "Run all the ci tasks"
depends = ["stack:k8s:create", "stack:k8s:check"]
depends_post = ["stack:k8s:delete"]
