[sinks.debug]
enabled = true

[sinks.database]
enabled = true
type = "db"
url = "postgresql://cdviz:postgres-password@127.0.0.1:5432/cdviz"
pool_connections_min = 1
pool_connections_max = 10

[sources.cdevents_local_json]
enabled = true

[sources.cdevents_local_json.extractor]
type = "opendal"
kind = "fs"
polling_interval = "60s"
parameters = { root = "./events/cdevents.in.d" }
recursive = true
path_patterns = ["*.json"]
parser = "json"

[sources.service_deployed_local_csv]
enabled = false

[sources.service_deployed_local_csv.extractor]
type = "opendal"
kind = "fs"
polling_interval = "20s"
parameters = { root = "./events/service_deployed.in.d" }
recursive = false
path_patterns = ["*.csv"]
parser = "csv_row"

[[sources.service_deployed_local_csv.transformers]]
type = "vrl"
template = """
[{
    "metadata": .metadata,
    "headers": .headers,
    "body": {
        "context": {
            "version": "0.4.1",
            "id": .boby.id,
            "source": "/demo/use_cases",
            "type": "dev.cdevents.service.deployed.0.1.1",
            "timestamp": .body.timestamp,
            # "chainId": ??
            # "links": ??
        },
        "subject": {
            "id": .body.id,
            # "source": ,
            "type": "service",
            "content": {
                "environment": {
                    "id": .body.env
                },
                "artifactId": .body.artifact_id
            }
        }
    }
}]
"""

[sources.pipelinerun_x_local_csv]
enabled = false
transformer_refs = ["pipelinerun_x", "log"]

[sources.pipelinerun_x_local_csv.extractor]
type = "opendal"
kind = "fs"
polling_interval = "20s"
parameters = { root = "./events/pipelinerun_x.in.d" }
recursive = false
path_patterns = ["*.csv"]
parser = "csv_row"

[transformers.pipelinerun_x]
type = "vrl"
template_file = "./transformers/pipelinerun_x.vrl"

[sources.artifact_lifecycle_csv]
enabled = true
transformer_refs = ["artifact_lifecycle", "log"]

[sources.artifact_lifecycle_csv.extractor]
type = "opendal"
kind = "fs"
polling_interval = "20s"
parameters = { root = "./events/artifact_lifecycle.d" }
recursive = false
path_patterns = ["*.csv"]
parser = "csv_row"

[transformers.artifact_lifecycle]
type = "vrl"
template_file = "./transformers/artifact_lifecycle.vrl"
