[tools]
"bun" = "latest"
"dprint" = "latest"
# "magick" = "latest" # imagemagick

[tasks]
install = "bun install"
dev = "bun run docs:dev"
build = "bun run docs:build"
preview = "bun run docs:preview"

[tasks."build_favicon"]
description = "rebuild favicon.{ico,png,webp} from favicon.svg"
dir = "assets"
run = [
  # limit to browser resolution see https://favicon.im/blog/favicon-formats-sizes-best-practices
  # use imagemagick
  # -background none to keep transparency, should be before the input file
  "magick -background none favicon.svg -define icon:auto-resize=16,32,48,64 favicon.ico",
  "magick -background none favicon.svg -resize 48x48 favicon.png",
  "magick -background none favicon.svg -resize 48x48 favicon.webp",
  "magick -background none favicon.svg -resize 320x320 logos/cdviz-320x320-c.png",
]
sources = ["favicon.svg"]
outputs = ["favicon.ico", "favicon.png", "favicon.webp"]

[tasks."build_hero-images"]
description = "rebuild optimized hero images from hero-dashboard-01.webp"
dir = "assets/illustrations"
run = [
  # Create optimized WebP versions with different quality levels
  "magick hero-dashboard-01.webp -quality 75 -define webp:method=6 hero-dashboard-01-q75.webp",
  "magick hero-dashboard-01.webp -quality 60 -define webp:method=6 hero-dashboard-01-q60.webp",

  # Create responsive sizes with WebP format
  "magick hero-dashboard-01.webp -resize 600x537 -quality 80 -define webp:method=6 hero-dashboard-01-600w.webp",
  "magick hero-dashboard-01.webp -resize 400x358 -quality 85 -define webp:method=6 hero-dashboard-01-400w.webp",

  # Create AVIF versions for modern browsers (better compression)
  "magick hero-dashboard-01.webp -quality 75 hero-dashboard-01.avif",
  "magick hero-dashboard-01-600w.webp -quality 75 hero-dashboard-01-600w.avif",
  "magick hero-dashboard-01-400w.webp -quality 75 hero-dashboard-01-400w.avif",
]
sources = ["hero-dashboard-01.webp"]
outputs = [
  "hero-dashboard-01-q75.webp",
  "hero-dashboard-01-q60.webp",
  "hero-dashboard-01-600w.webp",
  "hero-dashboard-01-400w.webp",
  "hero-dashboard-01.avif",
  "hero-dashboard-01-600w.avif",
  "hero-dashboard-01-400w.avif",
]

[tasks."build_images"]
description = "rebuild all optimized images (favicon + hero images)"
depends = [":build_favicon", ":build_hero-images"]

[tasks.format]
alias = "fmt"
description = "format with dprint (includes biome plugin)"
depends = [":trim_trailing-space"]
run = ["dprint fmt"]

[tasks."perf_report"]
description = "analyze performance of a running local preview server & published landing page"
dir = "perf"
run = [
  "lighthouse --quiet --view --chrome-flags='--headless' http://localhost:4173/",
  "lighthouse --quiet --view --chrome-flags='--headless' https://cdviz.dev/",
]

[tasks."trim_trailing-space"]
description = "trim trailing whitespace"
run = [
  "find . -type f -name '*.md' -exec sed -i -e 's/[[:space:]]*$//' {} \\;",
  "find . -type f -name '*.vue' -exec sed -i -e 's/[[:space:]]*$//' {} \\;",
  "find . -type f -name '*.js' -exec sed -i -e 's/[[:space:]]*$//' {} \\;",
  "find . -type f -name '*.ts' -exec sed -i -e 's/[[:space:]]*$//' {} \\;",
  "find . -type f -name '*.json' -exec sed -i -e 's/[[:space:]]*$//' {} \\;",
  "find . -type f -name '*.css' -exec sed -i -e 's/[[:space:]]*$//' {} \\;",
  "find . -type f -name '*.scss' -exec sed -i -e 's/[[:space:]]*$//' {} \\;",
  "find . -type f -name '*.html' -exec sed -i -e 's/[[:space:]]*$//' {} \\;",
  "find . -type f -name '*.yml' -exec sed -i -e 's/[[:space:]]*$//' {} \\;",
  "find . -type f -name '*.yaml' -exec sed -i -e 's/[[:space:]]*$//' {} \\;",
  "find . -type f -name '*.toml' -exec sed -i -e 's/[[:space:]]*$//' {} \\;",
  "find . -type f -name '*.mts' -exec sed -i -e 's/[[:space:]]*$//' {} \\;",
]
