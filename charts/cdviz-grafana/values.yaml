datasources:
  enabled: true
  annotations:
    grafana_datasource: "1"
  definitions:
    cdviz:
      # same syntax than on grafana datasources provisionner
      type: postgres
      url: '$POSTGRES_HOST'
      user: '$POSTGRES_USER_CDVIZ_READER' # from env var (injected via secrets)
      secureJsonData:
        password: '$POSTGRES_PASSWORD_CDVIZ_READER'
      jsonData:
        database: '$POSTGRES_DB'
        sslmode: 'disable' # disable/require/verify-ca/verify-full
        maxOpenConns: 10 # Grafana v5.4+
        maxIdleConns: 10 # Grafana v5.4+
        maxIdleConnsAuto: true # Grafana v9.5.1+
        connMaxLifetime: 14400 # Grafana v5.4+
        postgresVersion: 1000
        timescaledb: false

dashboards:
  enabled: true
  annotations:
    grafana_dashboard: "1"

# Additional kubernetes resources to create. Helm template could be used.
# you could use it to create secrets, external secrets,
# configmaps, gateways (http-route, filter, ...), volumes, keda, ...
# - the name/key of the resource is used just to access the definition more easily than an arrays's index
# - the 'enabled' field is used to enable/disable the resource (removed when the resource is templated)
# - user can add any other resource definition as child node of extraObjects
# The manifests can be defined as a string or as a dictionary. But the string doesn't use the 'enabled' field.
extraObjects: {}
  # extrernalSecrets:
  #   enabled: true
  #   apiVersion: "kubernetes-client.io/v1"
  #   kind: ExternalSecret
  #   metadata:
  #     name: cdviz-collector-secrets
  #   spec:
  #     backendType: gcpSecretsManager
  #     data:
  #       - key: api-token
  #         name: api-token
