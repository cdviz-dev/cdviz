{{ $baseName := (printf "%s-migration" (.ReleaseName | default .Chart.Name) | replace "+" "-" | replace "." "-" | trunc 63 | trimSuffix "-") }}
{{ $name := (printf "%s-%s" $baseName (.Values.image.tag | default .Chart.AppVersion) | replace "+" "-" | replace "." "-" | trunc 63 | trimSuffix "-") }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: '{{ $baseName }}'
  labels:
    {{- include "my.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 8 }}
  {{- end }}
spec:
  schedule: "0 0 * * *"
  timeZone: "Etc/UTC"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 7
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: {{ .Values.ttlSecondsAfterFinished }}
      template:
        metadata:
          name: '{{ $name }}'
          labels:
            {{- include "my.labels" . | nindent 8 }}
        spec:
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          containers:
          - name: 'cdviz-db-migration'
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            # args for https://atlasgo.io/declarative/apply
            args:
              - migrate # or schema
              - apply
              - -u
              - "$(DATABASE_URL)"
              - --dir
              - file:///migrations/
            env:
            {{- range $key, $value := .Values.env }}
              - name: {{ $key }}
                {{- tpl (toYaml $value) $ | nindent 16 }}
            {{- end}}
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 10001
          restartPolicy: Never
      backoffLimit: 2
